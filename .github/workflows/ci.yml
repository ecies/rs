name: CI

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
      # cargo
      - uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: check
        if: matrix.os != 'windows-latest'

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
        if: matrix.os != 'windows-latest'

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
        if: matrix.os != 'windows-latest'

      - name: Run openssl tests
        run: cargo test
        if: matrix.os != 'windows-latest'
      - name: Run pure rust tests
        run: cargo test --no-default-features --features pure
      - name: Install wasm dep
        run: cargo install wasm-bindgen-cli || true
      - name: Run wasm tests
        run: cargo test --no-default-features --features pure --target=wasm32-unknown-unknown

      - name: Check cargo package
        run: cargo publish --dry-run
        if: matrix.os != 'windows-latest'
