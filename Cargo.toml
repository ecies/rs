[package]
name = "ecies"
version = "0.2.9"
# docs
authors = ["Weiliang Li <to.be.impressive@gmail.com>"]
description = "Elliptic Curve Integrated Encryption Scheme for secp256k1"
edition = "2021"
rust-version = "1.65"
keywords = [ # at most five
  "secp256k1",
  "x25519",
  "ed25519",
  "ecies",
  "cryptography",
]
license = "MIT"
readme = "README.md"
# links
documentation = "https://docs.rs/ecies/latest/ecies/"
homepage = "https://ecies.org/rs/"
repository = "https://github.com/ecies/rs"

[dependencies]
# elliptic curves
libsecp256k1 = { version = "0.7.2", default-features = false, features = [
  "static-context",
] }
curve25519-dalek = { version = "4.1.3", default-features = false, features = [
  "precomputed-tables",
], optional = true }
x25519-dalek = { version = "2.0.1", default-features = false, features = [
  "static_secrets",
], optional = true }
ed25519-dalek = { version = "2.1.1", default-features = false, optional = true }

# symmetric ciphers
# aes (openssl)
openssl = { version = "0.10.71", default-features = false, optional = true }
# aes (pure Rust)
aes-gcm = { version = "0.10.3", default-features = false, features = [
  "aes",
], optional = true }
typenum = { version = "1.18.0", default-features = false, optional = true }
# xchacha20
chacha20poly1305 = { version = "0.10.1", default-features = false, optional = true }

# hash
hkdf = { version = "0.12.4", default-features = false }
sha2 = { version = "0.10.8", default-features = false }

# random number generator
getrandom = { version = "0.2.15", default-features = false }
rand_core = { version = "0.6.4", default-features = false, features = [
  "getrandom",
] }

# configuration
once_cell = { version = "1.21.3", default-features = false, features = [
  "critical-section",
] }
parking_lot = "0.12.3"

[target.'cfg(all(target_arch = "wasm32", target_os="unknown"))'.dependencies]
# only for js (browser or node). if it's not js, like substrate, it won't build
getrandom = { version = "0.2.15", default-features = false, features = ["js"] }
once_cell = { version = "1.21.3", default-features = false, features = ["std"] }
wasm-bindgen = { version = "0.2.100", default-features = false }

[target.'cfg(all(target_arch = "wasm32", not(target_os="unknown")))'.dependencies]
# for wasm32-wasip2
once_cell = { version = "1.21.3", default-features = false, features = ["std"] }

[features]
default = ["aes-openssl"]
std = ["hkdf/std", "sha2/std", "once_cell/std"]

# curves
# no usage, TODO: make optional after 0.3.0: secp256k1 = ["dep:libsecp256k1"]
secp256k1 = []
x25519 = ["dep:curve25519-dalek", "dep:x25519-dalek"]
ed25519 = ["dep:curve25519-dalek", "dep:ed25519-dalek"]

# aes
aes-openssl = ["dep:openssl"]
aes-rust = ["dep:aes-gcm", "dep:typenum"]
# 12 bytes nonce, default: 16 bytes
aes-short-nonce = []

# deprecated aes features, TODO: remove
openssl = ["aes-openssl"]
pure = ["aes-rust"]
aes-12bytes-nonce = ["aes-short-nonce"]

# xchacha20
xchacha20 = ["dep:chacha20poly1305"]

# zeroize
zeroize = [
  "x25519-dalek/zeroize",
  "ed25519-dalek/zeroize",
]

[dev-dependencies]
criterion = { version = "0.5.1", default-features = false }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.50"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
futures-util = "0.3.31"
reqwest = "0.12.15"
tokio = { version = "1.44.1", default-features = false, features = [
  "rt-multi-thread",
] }

[[bench]]
harness = false
name = "simple"
path = "bench/simple.rs"
